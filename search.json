[{"path":"https://mjfrigaard.github.io/gerp/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 gerp authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mjfrigaard.github.io/gerp/articles/code.html","id":"creating-a-gerp-project","dir":"Articles","previous_headings":"","what":"Creating a gerp project","title":"code","text":"Create new gerp project:","code":"gerp::ger_proj(parent_dir = \"/Users/<username>/\", proj_name = \"my new project\")"},{"path":"https://mjfrigaard.github.io/gerp/articles/code.html","id":"ger_code","dir":"Articles","previous_headings":"Creating a gerp project","what":"ger_code()","title":"code","text":"ger_code() creates following files: can choose regular R script headers roxygen2 headers:","code":"code   ├── data.R   ├── import.R   ├── model.R   ├── tidy.R   ├── visualize.R   └── wrangle.R"},{"path":"https://mjfrigaard.github.io/gerp/articles/code.html","id":"header-true-default","dir":"Articles","previous_headings":"Creating a gerp project > ger_code()","what":"header = TRUE (default)","title":"code","text":"","code":"#' @title  #'  #'  #' @description #'  #' @details #'  #' @importFrom #'  #' @examples  #'  #'"},{"path":"https://mjfrigaard.github.io/gerp/articles/code.html","id":"header-false","dir":"Articles","previous_headings":"Creating a gerp project > ger_code()","what":"header = FALSE","title":"code","text":"","code":"#=====================================================================# # This is code to create: # Authored by and feedback to: # MIT License # Version: #=====================================================================#"},{"path":"https://mjfrigaard.github.io/gerp/articles/code.html","id":"codedata-r","dir":"Articles","previous_headings":"Creating a gerp project","what":"code/data.R","title":"code","text":"code/data.R file used documenting datasets project. See example : create .Rd document dataset accessible Help pane.","code":"#' Title (dataset description) #' #' @format A dataset with variables: #' \\describe{ #'   \\item{member}{Wu-Tang Clan Member Name} #'   \\item{name}{Wu-Tang Clan Given Name} #'   \\item{born}{Birth Year} #'   \\item{city}{Birth City} #'   \\item{alive}{Stil Alive?} #' } #' @source Link to data: https://en.wikipedia.org/wiki/Wu-Tang_Clan #' (downloaded YYYY-MM-DD) 'wu_df'"},{"path":"https://mjfrigaard.github.io/gerp/articles/collaborate.html","id":"creating-a-gerp-project","dir":"Articles","previous_headings":"","what":"Creating a gerp project","title":"collaborate","text":"Create new gerp project:  also creates CITATION file: requirements.md file LICENSE file (CC0 1.0 Universal)","code":"gerp::ger_proj(parent_dir = \"/Users/<username>/\", proj_name = \"my new project\") Make the project citable (3e) by including a CITATION file in the project's home directory that describes how to cite this project as a whole, and where to find (and how to cite) any data sets, code, figures, and other artifacts that have  their own DOIs.  Please cite this work as:  Morris, B.D. and E.P. White. 2013. 'The EcoData Retriever: improving access to existing ecological data.'PLOS ONE 8:e65848. http://doi.org/doi:10.1371/journal.pone.0065848 # Requirements  ==============  Make dependencies and requirements explicit. This is usually done on a  per-project rather than per-program basis, i.e., by adding a file called  something like requirements.txt to the root directory of the project   source: https://swcarpentry.github.io/good-enough-practices-in-scientific-computing/"},{"path":"https://mjfrigaard.github.io/gerp/articles/data.html","id":"creating-a-gerp-project","dir":"Articles","previous_headings":"","what":"Creating a gerp project","title":"data","text":"Create new gerp project:","code":"gerp::ger_proj(parent_dir = \"/Users/<username>/\", proj_name = \"my new project\")"},{"path":"https://mjfrigaard.github.io/gerp/articles/data.html","id":"ger_data","dir":"Articles","previous_headings":"Creating a gerp project","what":"ger_data()","title":"data","text":"ger_data() creates three folders data.md file. data-raw/: contain code used import, download include data project data/: contain processed, intermediate, otherwise altered data project inst/exdata/: external data used examples testing data.md: Document data code/data.R example, stored wu_data.csv data stored inst/exdata/: code download wu_data.csv Github data-raw/wu_df.R (see ) usethis::use_data(wu_df, overwrite = TRUE) command automatically save data/ folder. ’s documented code/data.R example, can add details data.md.","code":"├── data.md ├── data ├── data-raw └── inst     └── extdata inst/extdata/         └── wu_data.csv ## code to prepare `wu_df` dataset goes here wu_df <- utils::read.csv(   \"https://raw.githubusercontent.com/mjfrigaard/gerp/main/inst/extdata/wu_data.csv\") usethis::use_data(wu_df, overwrite = TRUE) #> ✔ Setting active project to '/home/runner/work/gerp/gerp' #> ✔ Saving 'wu_df' to 'data/wu_df.rda' #> • Document your data (see 'https://r-pkgs.org/data.html') data   └── wu_df.rda"},{"path":"https://mjfrigaard.github.io/gerp/articles/documents.html","id":"creating-a-gerp-project","dir":"Articles","previous_headings":"","what":"Creating a gerp project","title":"documents","text":"Create new gerp project:","code":"gerp::ger_proj(parent_dir = \"/Users/<username>/\", proj_name = \"my new project\")"},{"path":"https://mjfrigaard.github.io/gerp/articles/documents.html","id":"ger_ref","dir":"Articles","previous_headings":"Creating a gerp project","what":"ger_ref()","title":"documents","text":"ger_ref() function creates three files documentation: ref/notebook.Rmd, ref/manuscript.Rmd, changelog.md. ref/notebook.Rmd: R Markdown notebook (.e., lab notebook). ref/manuscript.Rmd: polished R Markdown file reports manuscripts. changelog.md: Manually document changes files folders project.","code":"├── changelog.md ref/   ├── manuscript.Rmd   └── notebook.Rmd"},{"path":"https://mjfrigaard.github.io/gerp/articles/gerp-project-dev.html","id":"is_quiet","dir":"Articles","previous_headings":"","what":"is_quiet()","title":"Developing gerp() function","text":"","code":"# is_quiet ------- is_quiet <- function() {   isTRUE(getOption(\"usethis.quiet\", default = FALSE)) }"},{"path":"https://mjfrigaard.github.io/gerp/articles/gerp-project-dev.html","id":"ui-functions","dir":"Articles","previous_headings":"","what":"ui functions","title":"Developing gerp() function","text":"","code":"# ui_value  ----- ui_value <- function(x) {   if (is.character(x)) {     x <- encodeString(x, quote = \"'\")   }   x <- crayon::blue(x)   x <- glue::glue_collapse(x, sep = \", \")   x } ui_value(x) # ui_inform  ----- ui_inform <- function(...) {   if (!is_quiet()) {     rlang::inform(paste0(...))   }   invisible() } ui_inform(x) ui_stop <- function(x, .envir = parent.frame()) {   x <- glue::glue_collapse(x, \"\\n\")   x <- glue::glue(x, .envir = .envir)    cnd <- structure(     class = c(\"usethis_error\", \"error\", \"condition\"),     list(message = x)   )   stop(cnd) } ui_yeah <- function(x,       yes = c(\"Yes\", \"Definitely\", \"For sure\", \"Yup\", \"Yeah\", \"I agree\", \"Absolutely\"),       no = c(\"No way\", \"Not now\", \"Negative\", \"No\", \"Nope\", \"Absolutely not\"),       n_yes = 1, n_no = 2, shuffle = TRUE,       .envir = parent.frame()) {   x <- glue::glue_collapse(x, \"\\n\")   x <- glue::glue(x, .envir = .envir)    if (!rlang::is_interactive()) {     ui_stop(c(       \"User input required, but session is not interactive.\",       \"Query: {x}\"     ))   }    n_yes <- min(n_yes, length(yes))   n_no <- min(n_no, length(no))    qs <- c(sample(yes, n_yes), sample(no, n_no))    if (shuffle) {     qs <- sample(qs)   }    # TODO: should this be ui_inform()?   rlang::inform(x)   out <- utils::menu(qs)   out != 0L && qs[[out]] %in% yes } # ui_yeah(x) ui_nope <- function(x,       yes = c(\"Yes\", \"Definitely\", \"For sure\", \"Yup\", \"Yeah\", \"I agree\", \"Absolutely\"),       no = c(\"No way\", \"Not now\", \"Negative\", \"No\", \"Nope\", \"Absolutely not\"),       n_yes = 1, n_no = 2, shuffle = TRUE,       .envir = parent.frame()) {   # TODO(jennybc): is this correct in the case of no selection / cancelling?   !ui_yeah(     x = x, yes = yes, no = no,     n_yes = n_yes, n_no = n_no,     shuffle = shuffle,     .envir = .envir   ) } # ui_nope(x) ui_line <- function(x = character(), .envir = parent.frame()) {   x <- glue::glue_collapse(x, \"\\n\")   x <- glue::glue(x, .envir = .envir)   ui_inform(x) } ui_line(x) ui_path <- function(x, base = NULL) {   is_directory <- fs::is_dir(x) | grepl(\"/$\", x)   if (is.null(base)) {     x <- proj_rel_path(x)   } else if (!identical(base, NA)) {     x <- path_rel(x, base)   }   # rationalize trailing slashes   x <- fs::path_tidy(x)   x <- ifelse(is_directory, paste0(x, \"/\"), x)   ui_value(x) } ui_path(x) # indent ----- indent <- function(x, first = \"  \", indent = first) {   x <- gsub(\"\\n\", paste0(\"\\n\", indent), x)   paste0(first, x) } ui_bullet <- function(x, bullet = cli::symbol$bullet) {   bullet <- paste0(bullet, \" \")   x <- indent(x, bullet, \"  \")   ui_inform(x) } ui_bullet(x) ui_todo <- function(x, .envir = parent.frame()) {   x <- glue::glue_collapse(x, \"\\n\")   x <- glue::glue(x, .envir = .envir)   ui_bullet(x, crayon::red(cli::symbol$bullet)) } ui_code <- function(x) {   x <- encodeString(x, quote = \"`\")   x <- crayon::silver(x)   x <- glue::glue_collapse(x, sep = \", \")   x } ui_code_block <- function(x,                           copy = rlang::is_interactive(),                           .envir = parent.frame()) {   x <- glue::glue_collapse(x, \"\\n\")   x <- glue::glue(x, .envir = .envir)    block <- indent(x, \"  \")   block <- crayon::silver(block)   ui_inform(block)    if (copy && clipr::clipr_available()) {     x <- crayon::strip_style(x)     clipr::write_clip(x)     ui_inform(\"  [Copied to clipboard]\")   } } ui_code_block(x) ui_done <- function(x, .envir = parent.frame()) {   x <- glue::glue_collapse(x, \"\\n\")   x <- glue::glue(x, .envir = .envir)   ui_bullet(x, crayon::green(cli::symbol$tick)) } ui_done(x)"},{"path":[]},{"path":"https://mjfrigaard.github.io/gerp/articles/gerp-project-dev.html","id":"challenge_home_directory","dir":"Articles","previous_headings":"Challenege functions","what":"challenge_home_directory()","title":"Developing gerp() function","text":"","code":"challenge_home_directory <- function(path) {   homes <- unique(c(fs::path_home(), fs::path_home_r()))   if (!path %in% homes) {     return(invisible())   }    qualification <- if (is_windows()) {     glue::glue(\"a special directory, i.e. some applications regard it as \")   } else {     \"\"   }   ui_line(\"     {ui_path(path)} is {qualification}your home directory.     It is generally a bad idea to create a new project here.     You should probably create your new project in a subdirectory.\")   if (ui_nope(\"Do you want to create anyway?\")) {     ui_stop(\"Good move! Cancelling project creation.\")   }   invisible() } challenge_home_directory(x)"},{"path":"https://mjfrigaard.github.io/gerp/articles/gerp-project-dev.html","id":"challenge_nested_project","dir":"Articles","previous_headings":"Challenege functions","what":"challenge_nested_project()","title":"Developing gerp() function","text":"","code":"challenge_nested_project <- function(path, name) {   if (!possibly_in_proj(path)) {     return(invisible())   }    # creates an undocumented backdoor we can exploit when the interactive   # approval is impractical, e.g. in tests   if (isTRUE(getOption(\"usethis.allow_nested_project\", FALSE))) {     return(invisible())   }   ui_line(     \"New project {ui_value(name)} is nested inside an existing project \\\\     {ui_path(path)}, which is rarely a good idea.     If this is unexpected, the here package has a function, \\\\     {ui_code('here::dr_here()')} that reveals why {ui_path(path)} \\\\     is regarded as a project.\"   )   if (ui_nope(\"Do you want to create anyway?\")) {     ui_stop(\"Cancelling project creation.\")   }   invisible() }"},{"path":"https://mjfrigaard.github.io/gerp/articles/gerp-project-dev.html","id":"check_path_is_directory","dir":"Articles","previous_headings":"Challenege functions","what":"check_path_is_directory()","title":"Developing gerp() function","text":"","code":"# check_path_is_directory ------------- check_path_is_directory <- function(path) {   if (!fs::file_exists(path)) {     ui_stop(\"Directory {ui_path(path)} does not exist.\")   }   if (fs::is_link(path)) {     path <- link_path(path)   }   if (!fs::is_dir(path)) {     ui_stop(\"{ui_path(path)} is not a directory.\")   } } check_path_is_directory(x)"},{"path":[]},{"path":"https://mjfrigaard.github.io/gerp/articles/gerp-project-dev.html","id":"create_directory","dir":"Articles","previous_headings":"Create","what":"create_directory()","title":"Developing gerp() function","text":"","code":"# create_directory ---------- create_directory <- function(path) {   if (fs::dir_exists(path)) {     return(       invisible(FALSE)       )   } else if (fs::file_exists(path)) {     ui_stop(\"{ui_path(path)} exists but is not a directory.\")   }   fs::dir_create(path, recurse = TRUE)   ui_done(\"Creating {ui_path(path)}\")   invisible(TRUE) } gerp <- function(path, rstudio = rstudioapi::isAvailable(), open = rlang::is_interactive()) {   # defined above (converts to fs path)   path <- user_path_prep(path)   # gets the base name of directory   name <- fs::path_file(fs::path_abs(path))      if (fs::dir_exists(path)) {     ui_stop(\"Directory {ui_path(path)} already exists!\")   }      # defined above   challenge_nested_project(fs::path_dir(path), name)   challenge_home_directory(path)          create_directory(path)      # code   ger_code(folder_name = paste0(path, \"/R\"))   # data   ger_data(folder_name = path)   # ref   ger_ref(folder_name = path)      rstudioapi::initializeProject(path = path)      # open new session   rstudioapi::openProject(path = path, newSession = TRUE)    } gerp(x) # proj_get() fs::dir_tree(\"/Users/mjfrigaard/projects/_dev/gerp-testing/\", recurse = 3) unlink(\"/Users/mjfrigaard/projects/_dev/gerp-testing/gerp_test\", force = TRUE) if (rstudio) {     usethis::use_rstudio()   } else {     ui_done(\"Writing a sentinel file {ui_path('.here')}\")     ui_todo(\"Build robust paths within your project via {ui_code('here::here()')}\")     ui_todo(\"Learn more at <https://here.r-lib.org>\")     fs::file_create(usethis::proj_path(\".here\"))   }    if (open) {     if (usethis::proj_activate(usethis::proj_get())) {       # working directory/active project already set; clear the scheduled       # restoration of the original project       withr::deferred_clear()     }   }   invisible(proj_get()) }"},{"path":"https://mjfrigaard.github.io/gerp/articles/getting-started.html","id":"install-a-package","dir":"Articles","previous_headings":"","what":"Install a package","title":"Where do I start learning R?","text":"R open-source programming language, anyone can create R package. packages typically shared R users online repositories like Comprehensive R Archive Network (CRAN) GitHub. Enter code R console download recent version gerp GitHub:","code":"install.packages(\"remotes\") remotes::install_github(\"mjfrigaard/gerp\")"},{"path":"https://mjfrigaard.github.io/gerp/articles/getting-started.html","id":"load-a-package","dir":"Articles","previous_headings":"","what":"Load a package","title":"Where do I start learning R?","text":"gerp installed, load package using library() function","code":"library(gerp)"},{"path":"https://mjfrigaard.github.io/gerp/articles/getting-started.html","id":"r-projects","dir":"Articles","previous_headings":"","what":"R projects","title":"Where do I start learning R?","text":"R projects inevitably involve creating files, installing packages, next thing decide projects live. next practice ’ll cover tools methods orienting computers’ folder structure.","code":""},{"path":"https://mjfrigaard.github.io/gerp/articles/getting-started.html","id":"folder-orientation","dir":"Articles","previous_headings":"R projects","what":"Folder orientation","title":"Where do I start learning R?","text":"“don’t know going, ’ll end someplace else.” - Yogi Berra operating system folder structure refers files directories (.e. folders) organized computer’s hard drive. Folder structures can vary depending specific operating system used. However, operating systems basic design, including hierarchical tree-like arrangement similar common folders: Users/usr: user-level programs, utilities, libraries, documentation Library/lib: shared library files used applications bin: holds necessary system binary files programs etc: contains system configuration files Home/home: user-specific files directories computer’s operating system folder structure organized provide logical predictable way storing accessing folders files computer. Applications like Windows Explorer Finder present computer’s folder file structure display can navigate mouse cursor, behind scenes ’re accessing system paths (locations). Folder paths typically consist series names indicate hierarchical structure folder system, separated forward slash (\"/\") backslash (\"\\\") (depending operating system). Unix-based systems (like macOS Linux), topmost (root) folder usually represented forward slash (/). Windows systems, root folder assigned ‘drive letter’ followed backslash (.e, C:\\). ’s file path, may also include file’s extension. example, Windows file path might look like : C:\\Users\\Username\\Documents\\file.txt case: \"C:\" represents computer’s hard drive \"Users\" folder name \"Username\" user account folder \"Documents\" sub-folder within user’s home folder, \"file.txt\" name extension file Paths provide exact location file folder directory structure computer’s file system.","code":""},{"path":"https://mjfrigaard.github.io/gerp/articles/getting-started.html","id":"an-example-project-folder","dir":"Articles","previous_headings":"R projects > Folder orientation","what":"An example project folder","title":"Where do I start learning R?","text":"keep things simple, let’s assume ’ve chosen place R projects projects/ folder. ’ve created projects/ subfolder Users folder, can locate using using Finder (macOS):  folder structure macOS  ’m using Windows system, similar Projects/ folder might look like Windows Explorer:  folder structure Windows","code":""},{"path":"https://mjfrigaard.github.io/gerp/articles/getting-started.html","id":"rstudios-default-working-directory","dir":"Articles","previous_headings":"R projects > Folder orientation","what":"RStudio’s default working directory","title":"Where do I start learning R?","text":"open RStudio (PC), Files pane set User folder (image ), ’s displaying folders Windows Explorer (image ):  Home folder RStudio (macOS)  different displays can confusing, ’s better think file folder paths location map–one digit ’ll end wrong place. However, can confirm location checking folder path Files pane folders:  Directory path (Windows)  folder RStudio initially displays Files pane called default working directory, ’s configured install RStudio. ’d like change , can clicking Tools > Global Options Browse folder ’d like use:  Change default working directory","code":""},{"path":"https://mjfrigaard.github.io/gerp/articles/getting-started.html","id":"folder-navigation","dir":"Articles","previous_headings":"R projects","what":"Folder navigation","title":"Where do I start learning R?","text":"R comes helpful function printing current working directory (folder) path: getwd(). macOS, check working directory, see ’s user account folder: Three helpful functions viewing computers’ folders files : dir(), list.files(), list.dirs(). ’ll focus dir(), two function similar way. Passing dir() directly console (arguments) returns list folders default working directory: add full.names = TRUE argument, see full path files folders: Adding full.names returned folders files working directory, added ./ prefix. computer file systems, \".\" \"..\" special directory (.e., folder) names specific meanings. \".\" represents current folder, \"..\" represents parent folder file path. directory names used specify relative paths files directories file system.","code":"getwd() [1] \"/Users/mjfrigaard\" dir()  [1] \"Applications\"         \"Creative Cloud Files\" \"Desktop\"               [4] \"digital-id\"           \"Documents\"            \"Downloads\"             [7] \"Dropbox\"              \"Fonts\"                \"Library\"              [10] \"Movies\"               \"Music\"                \"opt\"              [13] \"Pictures\"             \"projects\"             \"Public\" [16] \"R\"                    \"Themes\" dir(full.names = TRUE)  [1] \"./Applications\"         \"./Creative Cloud Files\" \"./Desktop\"               [4] \"./digital-id\"           \"./Documents\"            \"./Downloads\"             [7] \"./Dropbox\"              \"./Fonts\"                \"./Library\"              [10] \"./Movies\"               \"./Music\"                \"./opt\"              [13] \"./Pictures\"             \"./projects\"             \"./Public\" [16] \"./R\"                    \"./Themes\""},{"path":"https://mjfrigaard.github.io/gerp/articles/getting-started.html","id":"folder-trees","dir":"Articles","previous_headings":"R projects > Folder navigation","what":"Folder trees","title":"Where do I start learning R?","text":"folder tree’s handy tools navigating computer’s folder structure. noted , operating systems organize folders files hierarchical, tree-like arrangement, single root directory (folder) top, sub-folders branching . folder can contain files additional subfolders , turn, can files subfolders. ’ll use folder trees describe special directories implied \".\" \"..\": \".\" represents current folder refers folder user currently . example, folder \"/user/jdoe/documents\", folder tree look like : case, \".\" refers location (\"/user/jdoe/documents\") \"..\" (dot dot) represents parent folder. used refer folder contains current folder. example, folder \"/user/jdoe/documents\" \"..\" refers \"/user/jdoe\"","code":"users/   └── jdoe/         └── documents/ <- my location users/   └── jdoe/         └── documents/ -> \".\" also my location users/   └── jdoe/         └── documents/ <- my location users/   └── jdoe/ -> \"..\" parent folder         └── documents/"},{"path":"https://mjfrigaard.github.io/gerp/articles/getting-started.html","id":"ger_path","dir":"Articles","previous_headings":"R projects","what":"ger_path()","title":"Where do I start learning R?","text":"first function ’ll cover one get comfortable using, ger_path(). ’ve already installed loaded gerp package, sometimes handy explicitly tell R function intend use package. can entering package::function(), can see image :  functions objects gerp  Using package::function() shows us functions objects package. select package item, can see documentation yellow:  help ger_path()  use ger_path(), start entering forward slash enclosed quotes (\"/\") hit Tab key, ’ll see list folders available starting home directory.  Home directory (macOS)  can continue using mouse (arrow keys) navigate parent folder want R project live (case, ’s /Users/mjfrigaard/projects/)    ger_path() works way Windows:","code":"gerp::ger_path(\"/\")"},{"path":"https://mjfrigaard.github.io/gerp/articles/getting-started.html","id":"creating-a-gerp-project","dir":"Articles","previous_headings":"R projects","what":"Creating a gerp project","title":"Where do I start learning R?","text":"locating R project folder, can pass gerp::ger_go(), new ‘good enough’ project open new session. Note: ’re already using cloud platform like Dropbox Google Drive keep track files, choose different location R project folders. Cloud storage services great, ’ve known cause issues working R RStudio. name package comes excellent article, ‘Good enough practices scientific computing’ Greg Wilson, Jennifer Bryan, Karen Cranston, Justin Kitzes, Lex Nederbragt Tracy K. Teal Jenny Bryan Jim Hester address many topics ‘forgot teach R’, ’ve codified package wherever .","code":"gerp::ger_go(parent_dir = \"/<Users>/<username>/<folder>\", proj_name = \"my new project\")"},{"path":"https://mjfrigaard.github.io/gerp/articles/setup.html","id":"ger_setup","dir":"Articles","previous_headings":"","what":"ger_setup()","title":"setup","text":"quick setup, run ger_setup() function create code/, data/, ref/ folders.","code":""},{"path":"https://mjfrigaard.github.io/gerp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Frigaard. Maintainer.","code":""},{"path":"https://mjfrigaard.github.io/gerp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Frigaard M (2023). gerp: Good Enough R (version 2!). R package version 0.1.0, https://mjfrigaard.github.io/gerp/.","code":"@Manual{,   title = {gerp: Good Enough R (version 2!)},   author = {Martin Frigaard},   year = {2023},   note = {R package version 0.1.0},   url = {https://mjfrigaard.github.io/gerp/}, }"},{"path":"https://mjfrigaard.github.io/gerp/index.html","id":"gerp-good-enough-r-practices","dir":"","previous_headings":"","what":"Good Enough R (version 2!)","title":"Good Enough R (version 2!)","text":"goal gerp get running ‘good enough R practices!’","code":""},{"path":"https://mjfrigaard.github.io/gerp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Good Enough R (version 2!)","text":"can install development version gerp like :","code":"install.packages(\"remotes\") remotes::install_github(\"mjfrigaard/gerp\")"},{"path":"https://mjfrigaard.github.io/gerp/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Good Enough R (version 2!)","text":"Create new ger project:","code":"ger::ger_proj(\"/Users/mjfrigaard/projects/\")"},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_code.html","id":null,"dir":"Reference","previous_headings":"","what":"good enough code files — ger_code","title":"good enough code files — ger_code","text":"Create code folder import, tidy, wrangle, visualize, model, data .R files.","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"good enough code files — ger_code","text":"","code":"ger_code(folder_name = NULL, header = TRUE)"},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"good enough code files — ger_code","text":"folder_name name folder code files (string) header include roxygen2 headers?","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"good enough code files — ger_code","text":"header FALSE, code files created standard script header. default, code files placed code/ folder, can changed character string.","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_data.html","id":null,"dir":"Reference","previous_headings":"","what":"good enough data folders — ger_data","title":"good enough data folders — ger_data","text":"Create data folders, inst/extdata folder, data.md file","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"good enough data folders — ger_data","text":"","code":"ger_data(folder_name = NULL)"},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"good enough data folders — ger_data","text":"ger_data() create following files folders: data-raw/ contain code used import, download include data project data/ contain processed, intermediate, otherwise altered data project inst/exdata/ external data used examples testing data.md Document data code/data.R","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"good enough data folders — ger_data","text":"","code":"# in new project # ger_data()"},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"good enough R development folder — ger_dev","title":"good enough R development folder — ger_dev","text":"Create dev/ folder dev/notebook.Rmd changelog.md files. dev/notebook.Rmd R Markdown notebook (.e., lab notebook).","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"good enough R development folder — ger_dev","text":"","code":"ger_dev(folder_name = NULL)"},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_fun_headr.html","id":null,"dir":"Reference","previous_headings":"","what":"Fun script header <(+_+)> — ger_fun_headr","title":"Fun script header <(+_+)> — ger_fun_headr","text":"fun_headr() function similar hot keys 'cmd + shift + R' creating section header. fun_headr() function similar hot keys 'cmd + shift + R' creating section header.","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_fun_headr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fun script header <(+_+)> — ger_fun_headr","text":"","code":"ger_fun_headr(name)  ger_fun_headr(name)"},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_fun_headr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fun script header <(+_+)> — ger_fun_headr","text":"name","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_fun_headr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fun script header <(+_+)> — ger_fun_headr","text":"","code":"# use this to create a fun section header in any .R file # with RStudio running... # gerp::fun_headr(\"import\")  # use this to create a fun section header in any .R file # with RStudio running... # gerp::fun_headr(\"import\")"},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_go.html","id":null,"dir":"Reference","previous_headings":"","what":"NEW gerp project! — ger_go","title":"NEW gerp project! — ger_go","text":"Create new good enough R project","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_go.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NEW gerp project! — ger_go","text":"","code":"ger_go(   path,   rstudio = rstudioapi::isAvailable(),   open = rlang::is_interactive() )"},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_go.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NEW gerp project! — ger_go","text":"path path new gerp project rstudio check RStudio running open R running interactively?","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_go.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NEW gerp project! — ger_go","text":"gerp project","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_go.html","id":"project-functions","dir":"Reference","previous_headings":"","what":"Project functions","title":"NEW gerp project! — ger_go","text":"following functions imported usethis","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_go.html","id":"create-project","dir":"Reference","previous_headings":"","what":"Create project","title":"NEW gerp project! — ger_go","text":"proj: new environment new.env(parent = emptyenv())","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_go.html","id":"get-active-set-projects","dir":"Reference","previous_headings":"","what":"get_(), active(), set() projects","title":"NEW gerp project! — ger_go","text":"proj_get_: current project (proj_get_ <- function() proj$cur) proj_active(): function created !.null(proj_get_()) proj_set_(): set old project path   proj_get(): get current project   result response usethis::proj_set(\".\"):","code":"proj_set_ <- function(path) {     old <- proj$cur     proj$cur <- path     invisible(old) } proj_get <- function() { # Called for first time so try working directory   if (!proj_active()) {     usethis::proj_set(\".\")   }   proj_get_() } ✔ Setting active project to '/path/to/current/project'"},{"path":[]},{"path":[]},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_go.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NEW gerp project! — ger_go","text":"","code":"# ger_go(\"path/to/folder\")"},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_headr.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert 'good enough' R script header — ger_headr","title":"Insert 'good enough' R script header — ger_headr","text":"ger_headr() function can used new R script create header. header includes sections : code creates author MIT License Version","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_headr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert 'good enough' R script header — ger_headr","text":"","code":"ger_headr()"},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_headr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert 'good enough' R script header — ger_headr","text":"","code":"# use this to create a script header (with RStudio open) # ger_headr(\"import\")"},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get good enough file path(s) — ger_path","title":"Get good enough file path(s) — ger_path","text":"Use ger_path() view folder file paths. type Return relative absolute path. default relative path, location file folder relative current working directory (folder). means start root directory, directory currently . Absolute paths exact location file folder file system hierarchy. begin root folder includes folders subfolders necessary locate file folder.","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get good enough file path(s) — ger_path","text":"","code":"ger_path(..., type = \"abs\")"},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get good enough file path(s) — ger_path","text":"... arguments passed fs::path_abs() type logical, relative (\"rel\") absolute (\"abs\") path (default absolute)","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get good enough file path(s) — ger_path","text":"file path(s) either normalized (type = FALSE) relative.","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get good enough file path(s) — ger_path","text":"","code":"ger_path(\".\") #> [1] \"/home/runner/work/gerp/gerp/docs/reference\""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_proj.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new good enough R project — ger_proj","title":"Create a new good enough R project — ger_proj","text":"Create open new 'good enough' project.","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_proj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new good enough R project — ger_proj","text":"","code":"ger_proj(folder, name)"},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_proj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new good enough R project — ger_proj","text":"folder parent folder project name name project","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_proj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a new good enough R project — ger_proj","text":"function open new RStudio project. folder parent folder contain new project, name name project sub-folder. navigate folders computer, like use ger_path() function. start ger_path(\"/\"), able find folders permissions (probably best start \"/Users\").","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_proj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new good enough R project — ger_proj","text":"","code":"# not run # ger_proj(folder = tempdir(), \"my project 01\")"},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_report.html","id":null,"dir":"Reference","previous_headings":"","what":"good enough R report folder — ger_report","title":"good enough R report folder — ger_report","text":"Create report folder report/manuscript.Rmd report/manuscript.Rmd polished R Markdown file reports manuscripts.","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"good enough R report folder — ger_report","text":"","code":"ger_report(folder_name = NULL)"},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"good enough R setup — ger_setup","title":"good enough R setup — ger_setup","text":"Create start-files project (changelog.md, CITATION, requirements.md, LICENSE) changelog.md Manually document changes files folders project. CITATION Information example cite project requirements.md Advice manually list requirements project LICENSE Downloaded license creativecommons.org","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"good enough R setup — ger_setup","text":"","code":"ger_setup(folder_name = NULL)"},{"path":"https://mjfrigaard.github.io/gerp/reference/ger_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"good enough R setup — ger_setup","text":"folder_name path project folder","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/gerp-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gerp: Good Enough R (version 2!) — gerp-package","title":"gerp: Good Enough R (version 2!) — gerp-package","text":"package helps users adopt set good enough computing practices working data. methods largely based paper, 'Good enough practices scientific computing' Wilson et al (2017). DOI: https://doi.org/10.1371/journal.pcbi.1005510","code":""},{"path":[]},{"path":"https://mjfrigaard.github.io/gerp/reference/wu_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Title (dataset description) — wu_df","title":"Title (dataset description) — wu_df","text":"Title (dataset description)","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/wu_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title (dataset description) — wu_df","text":"","code":"wu_df"},{"path":"https://mjfrigaard.github.io/gerp/reference/wu_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Title (dataset description) — wu_df","text":"dataset variables: member Wu-Tang Clan Member Name name Wu-Tang Clan Given Name born Birth Year city Birth City alive Stil Alive?","code":""},{"path":"https://mjfrigaard.github.io/gerp/reference/wu_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Title (dataset description) — wu_df","text":"Link data: https://en.wikipedia.org/wiki/Wu-Tang_Clan (downloaded YYYY-MM-DD)","code":""},{"path":"https://mjfrigaard.github.io/gerp/news/index.html","id":"gerp-010","dir":"Changelog","previous_headings":"","what":"gerp 0.1.0","title":"gerp 0.1.0","text":"Added NEWS.md file track changes package Added ger_proj(), ger_code(), ger_data(), ger_docs(), ger_setup() Added data-raw/wu_df.R, data-raw/wu_dt.R, data-raw/wu_tbl.R Added inst/extdata/wu_data.csv Added inst/rmarkdown/templates/gerp-README/README.Rmd README.Rmd template Updated README Added vignette/getting-started.Rmd","code":""}]
